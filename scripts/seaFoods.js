// scripts/seaFoods.js
const mongoose = require('mongoose');
const Food = require('../models/Food');
require('dotenv').config();

const foods = [
  {
    name: "H√†u n∆∞·ªõng ph√¥ mai",
    description: "H√†u b√©o ng·∫≠y, n∆∞·ªõng ph√¥ mai ch·∫£y b√©o ng·∫≠y, th∆°m ng·∫≠y.",
    province: "Qu·∫£ng Ninh",
    suggestedRestaurant: "Nh√† h√†ng H·∫£i s·∫£n B√£i Ch√°y", // Th√™m th√¥ng tin nh√† h√†ng
    image: "/images/Hau-nphomai.jpg",
    category: "·ªêc", // Th√™m category
    status: "approved"
  },
  {
    name: "B·ªÅ b·ªÅ h·∫•p bia",
    description: "M√≥n h·∫•p ƒë∆°n gi·∫£n m√† th∆°m ng·ªçt, d·ªÖ ƒÉn.",
    province: "Qu·∫£ng Ninh",
    suggestedRestaurant: "Qu√°n H·∫£i s·∫£n V√¢n ƒê·ªìn", // Th√™m th√¥ng tin nh√† h√†ng
    image: "/images/Bebe_hapbia.jpg",
    category: "B·ªÅ b·ªÅ", // Th√™m category
    status: "approved"
  },
  {
    name: "M·ª±c tr·ª©ng chi√™n gi√≤n",
    description: "M·ª±c tr·ª©ng lƒÉn b·ªôt chi√™n v√†ng, tr·ª©ng tan ch·∫£y trong mi·ªáng.",
    province: "H√† N·ªôi",
    suggestedRestaurant: "Nh√† h√†ng M√≥n Ngon H√† Th√†nh", // Th√™m th√¥ng tin nh√† h√†ng
    image: "/images/Mucchien.jpg",
    category: "M·ª±c", // Th√™m category
    status: "approved"
  },
  {
    name: "Ngao h·∫•p g·ª´ng s·∫£",
    description: "Ngao t∆∞∆°i h·∫•p g·ª´ng, s·∫£ th∆°m thanh, n∆∞·ªõc d√πng ng·ªçt d·ªãu.",
    province: "Nam ƒê·ªãnh",
    suggestedRestaurant: "Qu√°n H·∫£i S·∫£n Th√∫y H·∫±ng, Nam ƒê·ªãnh", // C√≥ s·∫µn
    image: "/images/Ngao_hapxa.jpg",
    category: "S√≤", // Th√™m category
    status: "approved"
  },
   {
    name: "T√¥m h·∫•p n∆∞·ªõc d·ª´a",
    description: "T√¥m t∆∞∆°i h·∫•p n∆∞·ªõc d·ª´a, ng·ªçt thanh v√† th∆°m.",
    province: "Qu·∫£ng Ninh",
    suggestedRestaurant: "Nh√† h√†ng V·ªãnh H·∫° Long, Qu·∫£ng Ninh", // C√≥ s·∫µn
    image: "/images/Tom_hapncdua.jpg",
    category: "T√¥m", // Th√™m category
    status: "approved"
  },
  {
    name: "Gh·∫π rang mu·ªëi",
    description: "Gh·∫π t∆∞∆°i rang mu·ªëi, v·ªã m·∫∑n cay, th∆°m l·ª´ng.",
    province: "Qu·∫£ng Ninh",
    suggestedRestaurant: "H·∫£i s·∫£n Ph√∫ Qu√Ω, H·∫° Long, Qu·∫£ng Ninh", // C√≥ s·∫µn
    image: "/images/Ghe_rangmuoi.jpg",
    category: "Gh·∫π", // Th√™m category
    status: "approved"
  },
  {
    name: "Cua rang me",
    description: "Cua rang s·ªët me chua ng·ªçt, th∆°m, v·ªè gi√≤n.",
    province: "H·∫£i Ph√≤ng",
    suggestedRestaurant: "Nh√† h√†ng Bi·ªÉn ƒê√¥ng, H·∫£i Ph√≤ng", // C√≥ s·∫µn
    image: "/images/Cua_rangme.jpg",
    category: "Cua", // Th√™m category
    status: "approved"
  },
  {
    name: "T√¥m h√πm baby ch√°y t·ªèi",
    description: "T√¥m nh·ªè nh∆∞ng ch·∫Øc th·ªãt, x√†o t·ªèi v√†ng th∆°m.",
    province: "Qu·∫£ng Ninh",
    suggestedRestaurant: "H·∫£i s·∫£n ƒê·∫£o Ng·ªçc, C·∫©m Ph·∫£, Qu·∫£ng Ninh", // C√≥ s·∫µn
    image: "/images/Tomhum_chaytoi.jpg",
    category: "T√¥m", // Th√™m category
    status: "approved"
  },
  // Th√™m m·ªôt s·ªë m√≥n kh√°c n·∫øu mu·ªën
  {
    name: "C√° song h·∫•p x√¨ d·∫ßu",
    description: "C√° song t∆∞∆°i ngon h·∫•p c√πng x√¨ d·∫ßu, g·ª´ng, h√†nh l√° th∆°m l·ª´ng.",
    province: "H·∫£i Ph√≤ng",
    suggestedRestaurant: "Nh√† h√†ng Gi√≥ Bi·ªÉn",
    image: "/images/casong.jpg", // B·∫°n c·∫ßn c√≥ ·∫£nh n√†y trong public/images
    category: "C√°",
    status: "approved"
  },
  {
    name: "B·∫°ch tu·ªôc n∆∞·ªõng sa t·∫ø",
    description: "B·∫°ch tu·ªôc n∆∞·ªõng sa t·∫ø cay n·ªìng, gi√≤n s·∫ßn s·∫≠t.",
    province: "ƒê√† N·∫µng",
    suggestedRestaurant: "Qu√°n B√© M·∫∑n",
    image: "/images/bachtuoc.jpg", // B·∫°n c·∫ßn c√≥ ·∫£nh n√†y trong public/images
    category: "B·∫°ch tu·ªôc",
    status: "approved"
  }
];

(async () => {
  try {
    await mongoose.connect(process.env.MONGO_URI);
    console.log('‚úÖ Connected to MongoDB for seeding data.');

    // X√≥a h·∫øt d·ªØ li·ªáu c≈© trong collection tr∆∞·ªõc khi th√™m m·ªõi
    await Food.deleteMany({});
    console.log('üóëÔ∏è Old food data cleared.');

    await Food.insertMany(foods);
    console.log(`‚úÖ Successfully added ${foods.length} food items!`);
    
    // Optional: Add a default admin user if it doesn't exist
    const User = require('../models/User');
    const bcrypt = require('bcrypt');
    const adminUser = await User.findOne({ username: 'admin' });
    if (!adminUser) {
        const hashedPassword = await bcrypt.hash('admin123', 10); // Default admin password
        await User.create({
            username: 'admin',
            password: hashedPassword,
            role: 'admin',
            email: 'admin@example.com',
            bio: 'Default administrator account'
        });
        console.log('‚ú® Default admin user created (username: admin, password: admin123)');
    } else {
        console.log('Admin user already exists.');
    }


  } catch (err) {
    console.error("‚ùå Error while seeding data:", err);
  } finally {
    mongoose.disconnect();
    console.log('üîå MongoDB connection closed.');
    process.exit();
  }
})();