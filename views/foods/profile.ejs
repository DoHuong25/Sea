<%- include('../partials/header', { title: 'Hồ Sơ Cá Nhân' }) %>

<div class="bg-gray-50" style="padding-top: 68px;">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="max-w-4xl mx-auto">
            
            <!-- Profile Header Card -->
            <div class="bg-white rounded-2xl shadow-lg p-8 flex flex-col md:flex-row items-center gap-8 mb-10">
                <img id="profile-avatar-img" src="<%= user.avatar || '/images/default-user.png' %>" alt="Avatar của <%= user.username %>" class="w-32 h-32 rounded-full object-cover border-4 border-red-100">
                <div class="text-center md:text-left flex-grow">
                    <h1 id="profile-username" class="text-3xl font-bold text-gray-800"><%= user.username %></h1>
                    <p id="profile-email" class="text-gray-500 mt-1"><%= user.email %></p>
                    <p id="profile-bio" class="mt-3 text-gray-600 max-w-lg"><%= user.bio || 'Chưa có tiểu sử.' %></p>
                </div>
                <button id="edit-profile-btn" class="mt-4 md:mt-0 px-6 py-2.5 text-sm bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 transition shadow-sm flex-shrink-0">
                    Chỉnh sửa
                </button>
            </div>

            <!-- Tabs Navigation -->
            <div class="mb-6 border-b border-gray-200">
                <ul class="flex flex-wrap -mb-px text-base font-semibold text-center" id="profile-tabs">
                    <li class="mr-2">
                        <a href="#" class="profile-tab inline-block p-4 border-b-2 rounded-t-lg" data-tab="my-foods-tab">Món Ăn Đã Đăng</a>
                    </li>
                    <li class="mr-2">
                        <a href="#" class="profile-tab inline-block p-4 border-b-2 rounded-t-lg" data-tab="my-ratings-tab">Đánh Giá Của Tôi</a>
                    </li>
                </ul>
            </div>
            
            <!-- Tab Content -->
            <div id="profile-tab-content">
                <!-- My Submitted Foods Pane -->
                <div id="my-foods-tab" class="profile-tab-pane space-y-4">
                     <% if(userFoods && userFoods.length > 0) { %>
                        <% userFoods.forEach(food => { 
                            const statusStyles = { 
                                pending: { text: 'Chờ duyệt', color: 'text-yellow-700', bg: 'bg-yellow-100' },
                                approved: { text: 'Đã duyệt', color: 'text-green-700', bg: 'bg-green-100' },
                                rejected: { text: 'Từ chối', color: 'text-red-700', bg: 'bg-red-100' },
                            };
                            const currentStatus = statusStyles[food.status] || statusStyles.pending;
                        %>
                            <div class="bg-white p-4 rounded-xl shadow-sm flex items-center justify-between gap-4" data-food-card-id="<%= food._id %>">
                                <div class="flex items-center gap-4 flex-grow">
                                    <a href="/foods/<%= food._id %>"><img src="<%= food.image %>" class="w-20 h-20 rounded-md object-cover food-card-image"></a>
                                    <div>
                                        <a href="/foods/<%= food._id %>" class="font-bold text-lg text-gray-800 hover:text-red-600 food-card-name"><%= food.name %></a>
                                        <p class="text-sm text-gray-500 food-card-province"><%= food.province %></p>
                                    </div>
                                </div>
                                <div class="flex items-center gap-2 flex-shrink-0">
                                    <button type="button" class="edit-food-btn h-10 w-10 flex items-center justify-center rounded-full text-gray-500 hover:bg-blue-100 hover:text-blue-600 transition" data-food-id="<%= food._id %>" title="Chỉnh sửa">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <form action="/foods/<%= food._id %>?_method=DELETE" method="POST" class="delete-form">
                                        <button type="submit" title="Xóa" class="h-10 w-10 flex items-center justify-center rounded-full text-gray-500 hover:bg-red-100 hover:text-red-600 transition">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <div class="text-center text-gray-500 py-12 bg-white rounded-xl shadow-sm"><i class="fas fa-folder-open text-4xl mb-4"></i><p>Bạn chưa đăng món ăn nào.</p><a href="/foods/new" class="mt-4 inline-block px-6 py-2 bg-red-500 text-white font-semibold rounded-lg hover:bg-red-600 transition">Đăng món ngay!</a></div>
                    <% } %>
                </div>
                 <!-- My Ratings Pane -->
                 <div id="my-ratings-tab" class="profile-tab-pane hidden space-y-4">
                    <% if(userRatings && userRatings.length > 0) { %>
                        <% userRatings.forEach(myRating => { %>
                            <div class="bg-white p-6 rounded-xl shadow-sm">
                                <p class="text-sm text-gray-500">Bạn đã đánh giá món: 
                                    <a href="/foods/<%= myRating.foodId %>" class="font-bold text-lg text-red-600 hover:underline"><%= myRating.foodName %></a>
                                </p>
                                <div class="my-2 text-yellow-400 text-xl">
                                     <% for(let i = 1; i <= 5; i++) { %>
                                        <i class="<%= myRating.stars >= i ? 'fas' : 'far' %> fa-star"></i>
                                     <% } %>
                                </div>
                                <p class="text-gray-700 text-lg italic">"<%= myRating.comment %>"</p>
                            </div>
                        <% }) %>
                    <% } else { %>
                         <div class="text-center text-gray-500 py-12 bg-white rounded-xl shadow-sm"><i class="fas fa-star-half-alt text-4xl mb-4"></i><p>Bạn chưa có đánh giá nào.</p></div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Profile Modal -->
<div id="edit-profile-modal" class="fixed inset-0 bg-black bg-opacity-60 z-50 flex justify-center items-center p-4 hidden">
    <div class="bg-white rounded-2xl shadow-xl w-full max-w-lg max-h-[90vh] overflow-y-auto">
        <form id="edit-profile-form" class="p-8 space-y-6">
            <div class="flex justify-between items-center"><h2 class="text-2xl font-bold">Chỉnh Sửa Hồ Sơ</h2><button type="button" class="modal-close-btn text-2xl">&times;</button></div>
            <div><label class="font-semibold text-sm mb-1 block">Tên người dùng*</label><input type="text" name="username" required value="<%= user.username %>" class="w-full p-3 rounded-lg border"></div>
            <div><label class="font-semibold text-sm mb-1 block">Email</label><input type="email" name="email" value="<%= user.email %>" class="w-full p-3 rounded-lg border"></div>
            <div><label class="font-semibold text-sm mb-1 block">Tiểu sử</label><textarea name="bio" rows="3" class="w-full p-3 rounded-lg border"><%= user.bio || '' %></textarea></div>
            <div><label class="font-semibold text-sm mb-1 block">Ảnh đại diện mới</label><input type="file" name="avatar" accept="image/*" class="w-full text-sm"></div>
            <div class="pt-4 flex justify-end gap-4"><button type="button" class="modal-close-btn px-6 py-2 rounded-lg hover:bg-gray-200">Hủy</button><button type="submit" class="px-8 py-2 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700">Lưu Thay Đổi</button></div>
        </form>
    </div>
</div>

<!-- Edit Food Modal -->
<div id="edit-food-modal" class="fixed inset-0 bg-black bg-opacity-60 z-50 flex justify-center items-center p-4 hidden">
    <div class="bg-white rounded-2xl shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto">
        <form id="edit-food-form" method="POST" enctype="multipart/form-data" class="p-8 space-y-6">
            <input type="hidden" name="_method" value="PUT">
            <div class="flex justify-between items-center"><h2 class="text-2xl font-bold">Chỉnh sửa món ăn</h2><button type="button" class="modal-close-btn text-2xl">&times;</button></div>
            <div><label class="font-semibold text-sm mb-1 block">Tên món ăn*</label><input type="text" name="name" required class="w-full p-3 rounded-lg border"></div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label class="font-semibold text-sm mb-1 block">Loại hải sản*</label>
                    <select name="category" id="edit-food-category" required class="w-full p-3 rounded-lg border">
                        <% seafoodCategories.forEach(c => { %><option value="<%= c %>"><%= c %></option><% }) %>
                    </select>
                </div>
                <div id="edit-other-category-wrapper" class="hidden">
                    <label class="font-semibold text-sm mb-1 block">Tên loại khác*</label>
                    <input type="text" name="otherCategoryName" class="w-full p-3 rounded-lg border">
                </div>
            </div>
            <div><label class="font-semibold text-sm mb-1 block">Tỉnh / Thành phố*</label><select name="province" required class="w-full p-3 rounded-lg border">
                <% provinces.forEach(p => { %><option value="<%= p %>"><%= p %></option><% }) %>
            </select></div>
            <div><label class="font-semibold text-sm mb-1 block">Mô tả</label><textarea name="description" rows="4" class="w-full p-3 rounded-lg border"></textarea></div>
            <div><label class="font-semibold text-sm mb-1 block">Nhà hàng gợi ý</label><input type="text" name="suggestedRestaurant" class="w-full p-3 rounded-lg border"></div>
            <div><label class="font-semibold text-sm mb-1 block">Ảnh mới (không bắt buộc)</label><input type="file" name="image" class="w-full text-sm"></div>
            <div class="pt-4 flex justify-end gap-4">
                <button type="button" class="modal-close-btn px-6 py-2 rounded-lg hover:bg-gray-200">Hủy</button>
                <button type="submit" class="px-8 py-2 bg-blue-600 text-white font-bold rounded-lg hover:bg-blue-700">Lưu Thay Đổi</button>
            </div>
        </form>
    </div>
</div>

<!-- Success Notification -->
<div id="success-notification" class="fixed top-24 right-5 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg transform translate-x-full transition-transform duration-500"></div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const successNotification = document.getElementById('success-notification');
        const showNotification = (message) => {
            successNotification.innerHTML = `<i class="fas fa-check-circle mr-2"></i><span>${message}</span>`;
            successNotification.classList.remove('translate-x-full');
            setTimeout(() => { successNotification.classList.add('translate-x-full'); }, 3000);
        };

        const closeModal = (modal) => modal.classList.add('hidden');
        const openModal = (modal) => modal.classList.remove('hidden');

        const editProfileModal = document.getElementById('edit-profile-modal');
        const editProfileForm = document.getElementById('edit-profile-form');
        document.getElementById('edit-profile-btn')?.addEventListener('click', () => openModal(editProfileModal));
        editProfileModal?.querySelectorAll('.modal-close-btn').forEach(btn => btn.addEventListener('click', () => closeModal(editProfileModal)));
        
        editProfileForm?.addEventListener('submit', async function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            try {
                const response = await fetch('/profile/edit', { method: 'POST', body: formData });
                const result = await response.json();
                if (result.success) {
                    document.getElementById('profile-username').textContent = result.user.username;
                    document.getElementById('profile-email').textContent = result.user.email;
                    document.getElementById('profile-bio').textContent = result.user.bio || 'Chưa có tiểu sử.';
                    if (result.user.avatar) document.getElementById('profile-avatar-img').src = result.user.avatar;
                    closeModal(editProfileModal);
                    showNotification('Cập nhật hồ sơ thành công!');
                } else { throw new Error(result.message); }
            } catch (err) { alert('Lỗi: ' + err.message); }
        });

        const editFoodModal = document.getElementById('edit-food-modal');
        const editFoodForm = document.getElementById('edit-food-form');
        document.querySelectorAll('.edit-food-btn').forEach(button => {
            button.addEventListener('click', async function() {
                const foodId = this.dataset.foodId;
                try {
                    const response = await fetch(`/api/foods/${foodId}`);
                    if (!response.ok) throw new Error('Không thể tải dữ liệu món ăn.');
                    const food = await response.json();
                    
                    editFoodForm.action = `/foods/${foodId}?_method=PUT`;
                    editFoodForm.querySelector('input[name="name"]').value = food.name;
                    editFoodForm.querySelector('textarea[name="description"]').value = food.description;
                    editFoodForm.querySelector('select[name="category"]').value = food.category;
                    editFoodForm.querySelector('select[name="province"]').value = food.province;
                    editFoodForm.querySelector('input[name="suggestedRestaurant"]').value = food.suggestedRestaurant || '';
                    
                    const otherWrapper = editFoodForm.querySelector('#edit-other-category-wrapper');
                    const otherInput = editFoodForm.querySelector('input[name="otherCategoryName"]');
                    otherWrapper.classList.toggle('hidden', food.category !== 'Các loại khác');
                    otherInput.value = food.otherCategoryName || '';

                    openModal(editFoodModal);
                } catch (err) { alert('Lỗi: ' + err.message); }
            });
        });
        
        editFoodModal?.querySelector('#edit-food-category')?.addEventListener('change', function() {
             editFoodModal.querySelector('#edit-other-category-wrapper').classList.toggle('hidden', this.value !== 'Các loại khác');
        });
        
        editFoodForm?.addEventListener('submit', async function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            const foodId = this.action.split('/')[4].split('?')[0];
            try {
                const response = await fetch(this.action, { method: 'POST', body: formData });
                const result = await response.json();
                if(result.success) {
                    const card = document.querySelector(`[data-food-card-id="${foodId}"]`);
                    if(card) {
                        card.querySelector('.food-card-name').textContent = result.updatedFood.name;
                        card.querySelector('.food-card-province').textContent = result.updatedFood.province;
                        if(result.updatedFood.image) card.querySelector('.food-card-image').src = result.updatedFood.image;
                    }
                    closeModal(editFoodModal);
                    showNotification('Cập nhật món ăn thành công!');
                } else { throw new Error(result.message); }
            } catch (err) { alert('Lỗi: ' + err.message); }
        });

        editFoodModal?.querySelectorAll('.modal-close-btn').forEach(btn => btn.addEventListener('click', () => closeModal(editFoodModal)));

        document.querySelectorAll('.delete-form').forEach(form => {
            form.addEventListener('submit', function(e) {
                if (!confirm('Bạn có chắc chắn muốn xóa món ăn này không?')) e.preventDefault();
            });
        });

        const profileTabs = document.querySelectorAll('.profile-tab');
        const tabPanes = document.querySelectorAll('.profile-tab-pane');
        if (profileTabs.length > 0) {
            const setActiveTab = (tabId) => {
                tabPanes.forEach(pane => pane.classList.toggle('hidden', pane.id !== tabId));
                profileTabs.forEach(tab => {
                    const isActive = tab.dataset.tab === tabId;
                    tab.classList.toggle('border-red-500', isActive);
                    tab.classList.toggle('text-red-600', isActive);
                    tab.classList.toggle('border-transparent', !isActive);
                });
            };
            profileTabs.forEach(tab => {
                tab.addEventListener('click', (e) => {
                    e.preventDefault();
                    setActiveTab(tab.dataset.tab);
                });
            });
            setActiveTab('my-foods-tab');
        }
    });
</script>

<%- include('../partials/footer') %>
